version: "3"
services:
  db:
    image: mysql:5.7
    container_name: mysql
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - /home/app/mysql/data:/var/lib/mysql
      - /home/app/mysql/conf:/etc/mysql
      - /home/app/mysql/log:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=autotest_backend
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci'
    ]

  redis:
    image: redis:6.2.5
    container_name: redis_auto
    ports:
      - "6379:6379"
    volumes:
      - /home/app/redis/data:/data
      - /home/app/redis/conf/redis.conf:/etc/redis/redis.conf
    expose:
      - "6379"
    command:
      - "redis-server"
      - "/etc/redis/redis.conf"
      - "--appendonly"
      - "yes"
      - "--requirepass"
      - "123456"
      - "--bind"
      - "0.0.0.0"
    restart: always


  autotest_backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: autotest_backend:1.0.0
    container_name: autotest
    command: /bin/bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn -D -c gunicorn.py autotest_backend.wsgi:application && export C_FORCE_ROOT=True  && celery -A autotest_backend worker -l info -P eventlet"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: "service_started"
      redis:
        condition: "service_started"
    expose:
      - "8000"
    links:
      - db:mydb
      - redis:myredis
    restart: always
    environment:
      - MYSQL_HOST=mydb
      - MYSQL_DB=autotest_backend
      - MYSQL_USER=root
      - MYSQL_PASSWORD=123456
      - MYSQL_PORT=3306
      - REDIS_HOST=myredis
      - REDIS_PASSWORD=123456
      - REDIS_PORT=6379


  nginx:
    build:
      context: ./conf/nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: nginx_auto
    ports:
      - "88:88"
    depends_on:
      autotest_backend:
        condition: "service_started"
    expose:
      - "88"
    links:
      - autotest_backend:myweb
    restart: always
    command: ["nginx", "-g", "daemon off;"]


